{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/mozammal/Documents/Rhythmic_share/react-tracks-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/mozammal/Documents/Rhythmic_share/react-tracks-client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/home/mozammal/Documents/Rhythmic_share/react-tracks-client/src/components/Track/DeleteTrack.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation ($trackId: Int!) {\\n    deleteTrack(trackId: $trackId) {\\n      trackId\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TrashIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport { UserContext } from \"../../Root\";\nimport { GET_TRACKS_QUERY } from \"../../pages/App\";\n\nvar DeleteTrack = function DeleteTrack(_ref) {\n  var track = _ref.track;\n  var currentUser = useContext(UserContext);\n  var isCurrentUser = currentUser.id === track.postedBy.id;\n\n  var handleUpdateCache = function handleUpdateCache(cache, _ref2) {\n    var deleteTrack = _ref2.data.deleteTrack;\n    var data = cache.readQuery({\n      query: GET_TRACKS_QUERY\n    });\n    var index = data.tracks.findIndex(function (track) {\n      return Number(track.id) === deleteTrack.trackId;\n    });\n    var tracks = [].concat(_toConsumableArray(data.tracks.slice(0, index)), _toConsumableArray(data.tracks.slice(index + 1)));\n    cache.writeQuery({\n      query: GET_TRACKS_QUERY,\n      data: {\n        tracks: tracks\n      }\n    });\n  };\n\n  return isCurrentUser && React.createElement(Mutation, {\n    mutation: DELETE_TRACK_MUTATION,\n    variables: {\n      trackId: track.id\n    },\n    onCompleted: function onCompleted(data) {\n      console.log({\n        data: data\n      });\n    },\n    update: handleUpdateCache,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, function (deleteTrack) {\n    return React.createElement(IconButton, {\n      onClick: deleteTrack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(TrashIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  });\n};\n\nvar DELETE_TRACK_MUTATION = gql(_templateObject());\nexport default DeleteTrack;","map":{"version":3,"sources":["/home/mozammal/Documents/Rhythmic_share/react-tracks-client/src/components/Track/DeleteTrack.js"],"names":["React","useContext","Mutation","gql","IconButton","TrashIcon","UserContext","GET_TRACKS_QUERY","DeleteTrack","track","currentUser","isCurrentUser","id","postedBy","handleUpdateCache","cache","deleteTrack","data","readQuery","query","index","tracks","findIndex","Number","trackId","slice","writeQuery","DELETE_TRACK_MUTATION","console","log"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0CAAtB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,gBAAT,QAAiC,iBAAjC;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACjC,MAAMC,WAAW,GAAGT,UAAU,CAACK,WAAD,CAA9B;AACA,MAAMK,aAAa,GAAGD,WAAW,CAACE,EAAZ,KAAmBH,KAAK,CAACI,QAAN,CAAeD,EAAxD;;AAEA,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,SAAsC;AAAA,QAApBC,WAAoB,SAA5BC,IAA4B,CAApBD,WAAoB;AAC9D,QAAMC,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAgB;AAAEC,MAAAA,KAAK,EAAEZ;AAAT,KAAhB,CAAb;AACA,QAAMa,KAAK,GAAGH,IAAI,CAACI,MAAL,CAAYC,SAAZ,CACZ,UAACb,KAAD;AAAA,aAAWc,MAAM,CAACd,KAAK,CAACG,EAAP,CAAN,KAAqBI,WAAW,CAACQ,OAA5C;AAAA,KADY,CAAd;AAGA,QAAMH,MAAM,gCACPJ,IAAI,CAACI,MAAL,CAAYI,KAAZ,CAAkB,CAAlB,EAAqBL,KAArB,CADO,sBAEPH,IAAI,CAACI,MAAL,CAAYI,KAAZ,CAAkBL,KAAK,GAAG,CAA1B,CAFO,EAAZ;AAIAL,IAAAA,KAAK,CAACW,UAAN,CAAiB;AAAEP,MAAAA,KAAK,EAAEZ,gBAAT;AAA2BU,MAAAA,IAAI,EAAE;AAAEI,QAAAA,MAAM,EAANA;AAAF;AAAjC,KAAjB;AACD,GAVD;;AAWA,SACEV,aAAa,IACX,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAEgB,qBADZ;AAEE,IAAA,SAAS,EAAE;AAAEH,MAAAA,OAAO,EAAEf,KAAK,CAACG;AAAjB,KAFb;AAGE,IAAA,WAAW,EAAE,qBAACK,IAAD,EAAU;AACrBW,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEZ,QAAAA,IAAI,EAAJA;AAAF,OAAZ;AACD,KALH;AAME,IAAA,MAAM,EAAEH,iBANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG,UAACE,WAAD;AAAA,WACC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD;AAAA,GARH,CAFJ;AAkBD,CAjCD;;AAkCA,IAAMW,qBAAqB,GAAGxB,GAAH,mBAA3B;AAOA,eAAeK,WAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TrashIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport { UserContext } from \"../../Root\";\nimport { GET_TRACKS_QUERY } from \"../../pages/App\";\nconst DeleteTrack = ({ track }) => {\n  const currentUser = useContext(UserContext);\n  const isCurrentUser = currentUser.id === track.postedBy.id;\n\n  const handleUpdateCache = (cache, { data: { deleteTrack } }) => {\n    const data = cache.readQuery({ query: GET_TRACKS_QUERY });\n    const index = data.tracks.findIndex(\n      (track) => Number(track.id) === deleteTrack.trackId\n    );\n    const tracks = [\n      ...data.tracks.slice(0, index),\n      ...data.tracks.slice(index + 1),\n    ];\n    cache.writeQuery({ query: GET_TRACKS_QUERY, data: { tracks } });\n  };\n  return (\n    isCurrentUser && (\n      <Mutation\n        mutation={DELETE_TRACK_MUTATION}\n        variables={{ trackId: track.id }}\n        onCompleted={(data) => {\n          console.log({ data });\n        }}\n        update={handleUpdateCache}\n      >\n        {(deleteTrack) => (\n          <IconButton onClick={deleteTrack}>\n            <TrashIcon />\n          </IconButton>\n        )}\n      </Mutation>\n    )\n  );\n};\nconst DELETE_TRACK_MUTATION = gql`\n  mutation ($trackId: Int!) {\n    deleteTrack(trackId: $trackId) {\n      trackId\n    }\n  }\n`;\nexport default DeleteTrack;\n"]},"metadata":{},"sourceType":"module"}